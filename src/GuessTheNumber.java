/*
The fun and easy project “Guess the Number” is a short Java project that allows the user to guess the number generated by the computer & involves the following steps:

The system generates a random number from a given range, say 1 to 100.

The user is prompted to enter their given number in a displayed dialogue box.

The computer then tells if the entered number matches the guesses number or it is higher/lower than the generated number.

The game continues under the user guessing the number.

You can also incorporate further details as:

Limiting the number of attempts.

Adding more rounds.

Displaying score.

Giving points based on the number of attempts.



 */

//Pallavi Kapse
import java.util.Random;
import javax.swing.JOptionPane;

public class GuessTheNumber {
    public static void main(String[] args) {
        int minRange = 1;
        int maxRange = 10;
        int maxAttempts = 3;
        int score = 0;
        int rounds = 0;

        Random random = new Random();

        boolean playAgain = true;
        while (playAgain) {
            int randomNumber = random.nextInt(maxRange - minRange + 1) + minRange;
            int attempts = 0;
            rounds++;

            JOptionPane.showMessageDialog(null, "Round " + rounds + "\nGuess the number between " + minRange + " and " + maxRange);

            boolean guessed = false;
            while (!guessed && attempts < maxAttempts) {
                String input = JOptionPane.showInputDialog("Enter your guess:");

                try {
                    int guess = Integer.parseInt(input);
                    attempts++;

                    if (guess == randomNumber) {
                        guessed = true;
                        score += maxAttempts - attempts + 1;
                        JOptionPane.showMessageDialog(null, "Congratulations! You guessed the number in " + attempts + " attempts.");
                    } else if (guess < randomNumber) {
                        JOptionPane.showMessageDialog(null, "Too low! Try again.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Too high! Try again.");
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Invalid input! Please enter a valid number.");
                }
            }

            if (!guessed) {
                JOptionPane.showMessageDialog(null, "You ran out of attempts. The number was " + randomNumber + ".");
            }

            int option = JOptionPane.showConfirmDialog(null, "Do you want to play again?");
            if (option != JOptionPane.YES_OPTION) {
                playAgain = false;
            }
        }

        JOptionPane.showMessageDialog(null, "Game Over!\nTotal Rounds: " + rounds + "\nTotal Score: " + score);
    }
}
